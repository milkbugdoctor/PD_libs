#!/bin/bash

. subs.sh

desc_file=nt/nt.txt
while getopts t: foo ; do
    if [ "$foo" = 't' ]; then
        desc_file="$OPTARG"
    fi
done
shift $((OPTIND-1))

if [ $# -lt 3 ]; then
    echo -e "\nUsage: $0 [options] input.fa db-dir output-prefix [blat options]

    db-dir is the directory containing .2bit files.

    Creates data/output-prefix.*

    Options:
        -t desc.txt     also join with these sequence descriptions
"
    exit 1
fi

input="$1"  ; shift
db_dir="$1" ; shift
key="$1"    ; shift

mkdir -p data

if need $input data/$key.blat; then
    run "time -p do_fast.blat $input '-out=pslx $*' $db_dir/*.2bit > data/$key.blat"
fi
if need data/$key.blat data/$key.blat.align; then
    run "psl2align -b -g 100 data/$key.blat > data/$key.blat.align"
fi
align=data/$key.blat.align
if [ "$desc_file" -a -s "$desc_file" ]; then
    if need data/$key.blat.align data/$key.blat.align.txt; then
	run "join_files -add desc data/$key.blat.align $desc_file tname/id > data/$key.blat.align.txt"
    fi
    align=data/$key.blat.align.txt
    extra=desc
fi

if need $align data/$key.best.short.txt; then
    run "cols.select '{qlen} < 1000' < $align \
	| sort_file tname | get_best_hit tname matches | sort_file matches/nr \
	| ncols qname tname ident matches qlen $extra > data/$key.best.short.txt"
fi
if need $align data/$key.best.long.txt; then
    run "cols.select '{qlen} >= 1000' < $align \
	| sort_file tname | get_best_hit tname matches | sort_file matches/nr \
	| ncols qname tname ident matches qlen $extra > data/$key.best.long.txt"
fi
if need $align data/$key.best_query.txt; then
    run "cat $align \
	| sort_file qname matches/nr \
	| ncols qname tname ident matches qlen qsize cover $extra > data/$key.best_query.txt"
fi

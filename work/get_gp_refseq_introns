#!/usr/bin/perl

#
#	goldenpath start positions are 0-based, but ends are 1-based
#

$refseq = "gp_nov8.refFlat";

(($intron_file) = @ARGV) == 1 ||
	die "\nUsage: $0 intron-file\n\n";

open(INTRONS, ">$intron_file") || die "couldn't create $intron_file";

require 'mysql.pl';
require 'misc.pl';

$fd = mysql_output("select geneName, name, chrom, strand,
    txStart, txEnd, cdsStart, cdsEnd, exonStarts, exonEnds from $refseq");
$intron_num = 0;
$refseq_num = 0;
print_tabbed(INTRONS, "refseq_id intron_id gene refseq chr strand" .
	" tx_start tx_end cd_start cd_end intron_start intron_end intron_len\n");
while (<$fd>) {
	chomp;
	($geneName, $name, $chrom, $strand,
	    $tx_start, $tx_end, $cd_start, $cd_end, $exonStarts, $exonEnds) = split /\t/;
	$chr = $chrom;
	@starts = split(/,/, $exonStarts);
	grep($_++, @starts); # add one to start positions
	@ends = split(/,/, $exonEnds);
	$tx_start++;
	$cd_start++;
	$" = " ";
	shift(@starts);
	pop(@ends);
	next if @starts == 0;
	for (my $i = 0; $i <= $#ends; $i++) {
	    print INTRONS "$refseq_num\t$intron_num\t$geneName\t$name\t";
	    print_tabbed(INTRONS, "$chr $strand $tx_start $tx_end $cd_start $cd_end");
	    my $start = $ends[$i] + 1;
 	    my $end = $starts[$i] - 1;
	    printf INTRONS "\t%d\t%d\t%d\n", $start, $end, $end - $start + 1;
	    $intron_num++;
	}
	$refseq_num++;
}
close(INTRONS);


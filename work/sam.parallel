#!/bin/bash

. subs.sh

opts=
while  [[ "$1" =~ ^- ]]; do
    if [ "$1" = '-s' ]; then
	opts="$opts -s"
    elif [ "$1" = '-cd' ]; then
	cd=1
    elif [ "$1" = '-b' ]; then
	opts="$opts -b"
    elif [ "$1" = '-q' ]; then
	opts="$opts -q"
    elif [ "$1" = '-h' ]; then
	usage=1
    else
	echo -e "\nbad option: $1"
	usage=1
	break
    fi
    shift
done

if [ $# -lt 2 -o "$usage" ]; then
    echo -e "\nUsage: $0 [options] \"hosts list\" input-file command

    Run SAM-based command filter in parallel.  Command must read from
    stdin and send output to stdout/stderr.

    Options:
	-cd		cd to current dir on remote hosts
	-h              show this usage information
	-b	        convert output to BAM
	-s	        convert output to SAM
	-q	        split SAM input by query
"
    exit 1
fi

hosts="$1" ; shift
infile="$1" ; shift

tmp=/tmp/commands.$$
rm -f $tmp
cwd=`pwd`

count=1
for host in $hosts
do
    cmd="$*"
    if [ "`hostname -s`" = $host ]; then
	echo "$cmd" >> $tmp
    else
	if [ "$cd" ] ; then
	    echo "ssh $host 'cd $cwd && $cmd'" >> $tmp
	else
	    echo "ssh $host '$cmd'" >> $tmp
	fi
    fi
    count=$((count + 1))
done
run "java.multiplexer $opts sam $infile $tmp"

#!/usr/bin/perl

use Getopt::Std;
getopts('o:');

@ARGV == 2 || die "\nUsage: [options] $0 infile prefix > outfile

    Options:
	-o db	use old GoldenPath database, e.g. \"gp_nov8\"

";

my ($input_file, $prefix) = @ARGV;

require 'mysql.pl';
require 'misc.pl';
require 'columns.pl';
require 'cpg.pl';

get_CpG_info($opt_o);

$" = "\t";

open(IN, $input_file) || die "couldn't read $input_file";
my @header     = get_header(IN);
my $comments   = get_header_comments(@header);
my $chr_col    = find_prefixed_col(\@header, 'chr', 1, $prefix);
my $start_col  = find_prefixed_col(\@header, 'start', 1, $prefix);
my $end_col    = find_prefixed_col(\@header, 'end', 0, $prefix);
my $len_col    = find_prefixed_col(\@header, 'len', 0, $prefix);
die "can't find 'end' or 'len' column"
    if ! defined $end_col and ! defined $len_col;

$comments .= <<FOO;
# add_cpg:
#     left_cpg_start	- top-strand start position of nearest CpG island in left direction
#     left_cpg_end	- top-strand ending position of nearest CpG island in left direction
#     left_cpg_dist	- distance to nearest CpG island in left direction, 0 if overlapping
#     right_cpg_start	- top-strand start position of nearest CpG island in right direction
#     right_cpg_end	- top-strand ending position of nearest CpG island in right direction
#     right_cpg_dist	- distance to nearest CpG island in right direction, 0 if overlapping
FOO
my @out_cols = (@header, "left_cpg_start", "left_cpg_end", "left_cpg_dist",
    "right_cpg_start", "right_cpg_end", "right_cpg_dist");
print "$comments@out_cols\n";

while (my @line = get_row(IN)) {
    my $chr = get_col(\@header, \@line, $chr_col);
    my $start = get_col(\@header, \@line, $start_col);
    my $end = get_col(\@header, \@line, $end_col);
    my $len = get_col(\@header, \@line, $len_col);
    $end = $start + $len - 1 if ! defined $end;
    @cpg_5 = get_nearest_CpG($chr, $start, $end, -1);
    @cpg_3 = get_nearest_CpG($chr, $start, $end, 1);
    print "@line\t@cpg_5\t@cpg_3\n";
}
close(IN);

